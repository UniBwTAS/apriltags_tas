#!/usr/bin/env python
PACKAGE = "apriltags_tas"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

tag_family_enum = gen.enum([gen.const("16h5", int_t, 0, ""),
                            gen.const("25h7", int_t, 1, ""),
                            gen.const("25h9", int_t, 2, ""),
                            gen.const("36h9", int_t, 3, ""),
                            gen.const("36h11", int_t, 4, "")],
                           "")
gen.add("tag_family", int_t, 1, "Tag family", 4, 0, 4, edit_method=tag_family_enum)

refinement_method_enum = gen.enum([gen.const("NoRefinement", int_t, 0, ""),
                                   gen.const("CornerRefinement", int_t, 1, ""),
                                   gen.const("AdvEdgeRefinement", int_t, 2, "")],
                                  "")
gen.add("refinement_method", int_t, 1, "Refine tag corners by the given method", 0, 0, 2,
        edit_method=refinement_method_enum)

gen.add("only_known_tags", bool_t, 0, "Return only tags listed in config/single_tags.txt", False)
gen.add("filter_cross_corners", bool_t, 0, "Filter tags without clean cross corners", True)
gen.add("filter_cross_corners_radius_percent", double_t, 0, "", 15, 0, 100)
gen.add("publish_tf", bool_t, 0, "Publish the tag poses to tf", True)

debug = gen.add_group("Debug")
debug.add("tag_overlay_alpha", double_t, 0, "", 0.75, 0.0, 1.0)
debug.add("publish_debug_image", bool_t, 0, "Publish image with debug information like the detected tags", True)
debug.add("draw_detections", bool_t, 0, "Draw the outline of the detected tags", True)
debug.add("draw_cross_corner_filter_debug_info", bool_t, 0, "Draw further information used for the cross corner check",
          True)
debug.add("draw_corner_refinement_debug_info", bool_t, 0,
          "Draw further information used for the corner refinement", True)

exit(gen.generate(PACKAGE, "apriltags_tas", "AprilTagDetector"))
